S -> FUNC | OP
FUNC -> function LEX_ID (FUNCPARAMS) OP
FUNCPARAMS -> LEX_ID M | eps
M -> , LEX_ID M | eps
OP -> VALDEF |  EMPTYOP | BLOCK | IFOP | CYCLEOP | GOTOOP | EXPRESSION
VALDEF -> var LEX_ID L;
L -> =EXPRESSION F | eps
F -> , LEX_ID L | eps
EMPTYOP -> ;
BLOCK -> '{' OP {OP} '}'
IFOP -> if(EXPRESSION) OP D
D -> else OP | eps
CYCLEOP -> while(EXPRESSION) OP | do OP while(EXPRESSION); | for(FORPARAMS) OP
FORPARAMS -> EXPR ; EXPR ; EXPR | var LEX_ID in EXPRESSION | LEX_ID in EXPRESSION
EXPR -> EXPRESSION | eps
GOTOOP -> break; | continue; | return EXPR;
EXPRESSION -> E1 [=|<|>|<=|>=|!=|+=|-=|*=|/=|%=] E1 | E1
E1 -> T{[+ | - | '||']T}
T -> K{[ . | * | / | && ]K}
K -> LEX_ID | LEX_NUM | LEX_STR | LEX_TRUE| LEX_FALSE | !K | (EXPRESSION)